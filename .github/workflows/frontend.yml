name: Frontend CI/CD

on:
  push:
    branches: [ "dev" ]
    paths: ["src/frontend/SportLink-web"]
  pull_request:
    branches: [ "dev" ]
    paths: ["src/frontend/SportLink-web"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: sportlinkCR.azurecr.io
      IMAGE_NAME: sportlink-frontend
      ACR_NAME: sportlinkCR  # ACR name without .azurecr.io

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./src/frontend/SportLink-web

      - name: Build the React app
        run: npm run build
        working-directory: ./src/frontend/SportLink-web

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Extract ACR credentials
        id: acr_credentials
        run: |
          echo "ACR_USERNAME=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: |
          echo "$ACR_PASSWORD" | docker login ${{ env.REGISTRY }} -u "$ACR_USERNAME" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ./src/frontend/SportLink-web
        env:
          DOCKER_BUILDKIT: 1

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # deployment step -- for later
      # - name: Deploy to Azure App Service
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: your-app-service-name
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

