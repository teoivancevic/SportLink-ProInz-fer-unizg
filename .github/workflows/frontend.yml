name: Frontend CI/CD

on:
  push:
    branches: [ "dev" ]
    paths: ["src/frontend/SportLink-web/**"]
  pull_request:
    types: [ "opened", "reopened", "closed" ]
    branches: [ "dev" ]
    paths: ["src/frontend/SportLink-web/**"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: acrsportlink.azurecr.io
      IMAGE_NAME: webapp
      ACR_NAME: acrsportlink
      WEB_APP_NAME: webapp-sportlink-test
      API_URL: https://api-sportlink-test-02.azurewebsites.net

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: src/frontend/SportLink-web/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./src/frontend/SportLink-web

      - name: Build the React app
        run: npm run build
        working-directory: ./src/frontend/SportLink-web
        env:
          VITE_API_URL: ${{ env.API_URL }}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Extract ACR credentials
        id: acr_credentials
        run: |
          echo "ACR_USERNAME=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: |
          echo "$ACR_PASSWORD" | docker login ${{ env.REGISTRY }} -u "$ACR_USERNAME" --password-stdin

      - name: Build Docker image
        run: |
          docker build --build-arg VITE_API_URL=${{ env.API_URL }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ./src/frontend/SportLink-web
        env:
          DOCKER_BUILDKIT: 1

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEB_APP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

