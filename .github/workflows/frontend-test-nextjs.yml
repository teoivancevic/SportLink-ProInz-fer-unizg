name: Frontend CI/CD (Next.js)

on:
  push:
    branches: [ "dev" ]
    paths: ["src/frontend/sportlink-web-3/**"]
  pull_request:
    types: [ "opened", "reopened", "closed", "synchronize" ]
    branches: [ "dev" ]
    paths: ["src/frontend/sportlink-web-3/**"]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: https://api-sportlink-test-03.azurewebsites.net
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: src/frontend/sportlink-web-3/package-lock.json
          
      - name: Install Node dependencies
        run: npm ci
        working-directory: ./src/frontend/sportlink-web-3
        
      - name: Build the Next.js app
        run: npm run build
        working-directory: ./src/frontend/sportlink-web-3

      - name: Start Next.js
        run: |
          npm run start -- --port 3000 &
          npx wait-on http://localhost:3000
        working-directory: ./src/frontend/sportlink-web-3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install system dependencies for Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Python dependencies
        run: pip install pytest selenium undetected-chromedriver

      - name: Run Python tests
        env: 
          TEMPMAIL_RAPIDAPI_KEY: ${{ secrets.TEMPMAIL_RAPIDAPI_KEY }}
        run: |
          pytest src/frontend/sportlink-web-3/tests/

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    env:
      REGISTRY: acrsportlink02.azurecr.io
      IMAGE_NAME: webapp-test-nextjs
      ACR_NAME: acrsportlink02
      WEB_APP_NAME: webapp-sportlink-test-nextjs-03
      NEXT_PUBLIC_API_URL: https://api-sportlink-test-03.azurewebsites.net
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Set image tag
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Extract ACR credentials
        id: acr_credentials
        run: |
          echo "ACR_USERNAME=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: |
          echo "$ACR_PASSWORD" | docker login ${{ env.REGISTRY }} -u "$ACR_USERNAME" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }} \
            --build-arg NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            ./src/frontend/sportlink-web-3

          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        env:
          DOCKER_BUILDKIT: 1

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEB_APP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

